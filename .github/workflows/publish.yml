name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [18.x]
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
          cache: pnpm

      - run: pnpm install
      - run: pnpm run build

      - name: Save files action
        uses: LarchLiu/actions-save-files@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: publish
          publish_dir: ./app/bot/telegram-cl/dist, ./app/extension/chrome/dist
          full_commit_message: ${{ github.event.head_commit.message }}

      - name: zip extension
        uses: vimtor/action-zip@v1
        with:
          files: ./.output
          recursive: false
          dest: ./chrome-extension.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - run: npx changelogithub # or changelogithub@0.12 if ensure the stable result
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest release url
        id: get-release-url
        run: echo "::set-output name=release::$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/LarchLiu/nuxtjs-test/releases/latest)"
        

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get-release-url.outputs.release.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./chrome-extension.zip
          asset_name: chrome-extension.zip
          asset_content_type: application/zip
